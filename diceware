#!/usr/bin/env python3
# Diceware generator in Python 3

import os,argparse,math,sys
from os.path import *

def getwords(wordlist):
   lists={
      'diceware': 'diceware.txt',
      'beale': 'beale.txt',
      'dict': '/usr/share/dict/american-english',
      'combo': 'combo.txt'
      }
   path=os.path.dirname(os.path.realpath(os.path.abspath(__file__)))
   with open(os.path.join(path,lists[wordlist]),'r') as f:
      return f.readlines()

def inc(s):
   while True:
      yield s
      s+=1

def getidx(mx):
   bts=math.ceil(math.log(mx,256))
   def __inner():
      res=0
      for x,y in zip(inc(0),os.urandom(bts)):
         res+=(y<<(8*x))
      return res
   x=__inner()
   while x > mx:
      x=__inner()
   return x

def pick(n, wordlist):
   pw=[]
   wlen=len(wordlist)
   for i in range(n):
      idx=getidx(wlen-1)
      word=wordlist[idx].strip().split(' ')
      if len(word) == 2:
        pw.append(word[1])
      else:
        pw.append(word[0])
   return pw

if __name__=='__main__':
   parser=argparse.ArgumentParser(description='Diceware generator in Python 3')
   parser.add_argument('-v','--version',action='version',version='diceware 1.0')
   parser.add_argument('-b','--bits',action='store_true',dest='bits')
   parser.add_argument('-n','--nonl',action='store_true',dest='newline')
   parser.add_argument('-l','--list',choices=['diceware','beale','combo', 'dict'],
                       default='beale',help='wordlist to use')
   parser.add_argument('words',nargs='?',default=None,type=int,
                       help='size of the passphrase in words (or bits, with -b)')
   options=parser.parse_args()

   wlist=getwords(options.list)
   if options.bits:
      ask=max(1,options.words) or 65
      bpw=math.log(len(wlist),2)
      req=ask/bpw
      words=math.ceil(req)
   else:
      words=options.words or 8
   ls=pick(words, wlist)
   print(' '.join(ls), end='' if options.newline else '\n')
